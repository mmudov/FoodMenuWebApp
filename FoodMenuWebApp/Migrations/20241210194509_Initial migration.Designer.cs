// <auto-generated />
using FoodMenuWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodMenuWebApp.Migrations
{
    [DbContext(typeof(MenuContext))]
    [Migration("20241210194509_Initial migration")]
    partial class Initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodMenuWebApp.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://au.ooni.com/cdn/shop/articles/20220211142645-margherita-9920.jpg?crop=center&height=800&v=1662539926&width=800",
                            Name = "Margherita",
                            Price = 7.5
                        });
                });

            modelBuilder.Entity("FoodMenuWebApp.Models.DishIngradient", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("IngradientId")
                        .HasColumnType("int");

                    b.HasKey("DishId", "IngradientId");

                    b.HasIndex("IngradientId");

                    b.ToTable("DishIngradients");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            IngradientId = 1
                        },
                        new
                        {
                            DishId = 1,
                            IngradientId = 2
                        });
                });

            modelBuilder.Entity("FoodMenuWebApp.Models.Ingradient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingradients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tomato Sauce"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mozzarella"
                        });
                });

            modelBuilder.Entity("FoodMenuWebApp.Models.DishIngradient", b =>
                {
                    b.HasOne("FoodMenuWebApp.Models.Dish", "Dish")
                        .WithMany("DishIngradients")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodMenuWebApp.Models.Ingradient", "Ingradient")
                        .WithMany("DishIngradients")
                        .HasForeignKey("IngradientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Ingradient");
                });

            modelBuilder.Entity("FoodMenuWebApp.Models.Dish", b =>
                {
                    b.Navigation("DishIngradients");
                });

            modelBuilder.Entity("FoodMenuWebApp.Models.Ingradient", b =>
                {
                    b.Navigation("DishIngradients");
                });
#pragma warning restore 612, 618
        }
    }
}
